<testsuites id="" name="" tests="786" failures="0" skipped="786" errors="0" time="0.05158799999999997">
<testsuite name="auth.cleanup.ts" timestamp="2025-08-09T04:22:17.493Z" hostname="cleanup" tests="1" failures="0" skipped="1" time="0" errors="0">
<testcase name="cleanup auth states" classname="auth.cleanup.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="auth.setup.ts" timestamp="2025-08-09T04:22:17.493Z" hostname="setup" tests="4" failures="0" skipped="4" time="0" errors="0">
<testcase name="authenticate executive" classname="auth.setup.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="authenticate product owner" classname="auth.setup.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="authenticate scrum master" classname="auth.setup.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="authenticate developer" classname="auth.setup.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="api/integration.spec.ts" timestamp="2025-08-09T04:22:17.493Z" hostname="chromium" tests="21" failures="0" skipped="21" time="0" errors="0">
<testcase name="QVF Platform API Integration Tests › Authentication API › should authenticate with valid credentials" classname="api/integration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform API Integration Tests › Authentication API › should reject invalid credentials" classname="api/integration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform API Integration Tests › Authentication API › should return user info with valid token" classname="api/integration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform API Integration Tests › Authentication API › should reject requests without token" classname="api/integration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform API Integration Tests › Authentication API › should reject requests with invalid token" classname="api/integration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform API Integration Tests › Health Check API › should return system health status" classname="api/integration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform API Integration Tests › Health Check API › should return version information" classname="api/integration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform API Integration Tests › Work Items API › should fetch work items list" classname="api/integration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform API Integration Tests › Work Items API › should create new work item" classname="api/integration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform API Integration Tests › Work Items API › should update existing work item" classname="api/integration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform API Integration Tests › Work Items API › should delete work item" classname="api/integration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform API Integration Tests › QVF Scoring API › should calculate QVF scores for work items" classname="api/integration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform API Integration Tests › QVF Scoring API › should fetch QVF criteria" classname="api/integration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform API Integration Tests › QVF Scoring API › should handle invalid QVF scoring requests" classname="api/integration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform API Integration Tests › Role-Based Access Control › should enforce role-based API access" classname="api/integration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform API Integration Tests › Error Handling › should handle malformed requests" classname="api/integration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform API Integration Tests › Error Handling › should handle missing required fields" classname="api/integration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform API Integration Tests › Error Handling › should handle server errors gracefully" classname="api/integration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform API Integration Tests › API Response Format › should return consistent response formats" classname="api/integration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform API Integration Tests › API Response Format › should include proper HTTP status codes" classname="api/integration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform API Integration Tests › Data Persistence › should persist data across API calls" classname="api/integration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="auth/authentication.spec.ts" timestamp="2025-08-09T04:22:17.493Z" hostname="chromium" tests="15" failures="0" skipped="15" time="0" errors="0">
<testcase name="QVF Platform Authentication › should display login page correctly" classname="auth/authentication.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Authentication › should reject invalid credentials" classname="auth/authentication.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Authentication › should handle empty form submission" classname="auth/authentication.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Authentication › should login successfully as executive" classname="auth/authentication.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Authentication › should login successfully as product_owner" classname="auth/authentication.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Authentication › should login successfully as scrum_master" classname="auth/authentication.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Authentication › should login successfully as developer" classname="auth/authentication.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Authentication › should logout successfully as executive" classname="auth/authentication.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Authentication › should logout successfully as product_owner" classname="auth/authentication.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Authentication › should logout successfully as scrum_master" classname="auth/authentication.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Authentication › should logout successfully as developer" classname="auth/authentication.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Authentication › should maintain session across page refreshes" classname="auth/authentication.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Authentication › should redirect to login when accessing protected routes without authentication" classname="auth/authentication.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Authentication › should handle concurrent login sessions" classname="auth/authentication.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Authentication › should handle token expiration gracefully" classname="auth/authentication.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="comparison/stakeholder-comparison.spec.ts" timestamp="2025-08-09T04:22:17.493Z" hostname="chromium" tests="11" failures="0" skipped="11" time="0" errors="0">
<testcase name="QVF Stakeholder Comparison Interface › should access stakeholder comparison interface" classname="comparison/stakeholder-comparison.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Stakeholder Comparison Interface › should display comparison matrix" classname="comparison/stakeholder-comparison.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Stakeholder Comparison Interface › should allow stakeholder input selection" classname="comparison/stakeholder-comparison.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Stakeholder Comparison Interface › should handle pairwise comparisons" classname="comparison/stakeholder-comparison.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Stakeholder Comparison Interface › should show comparison progress" classname="comparison/stakeholder-comparison.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Stakeholder Comparison Interface › should display consistency indicators" classname="comparison/stakeholder-comparison.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Stakeholder Comparison Interface › should handle different stakeholder perspectives" classname="comparison/stakeholder-comparison.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Stakeholder Comparison Interface › should allow comparison result export" classname="comparison/stakeholder-comparison.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Stakeholder Comparison Interface › should handle comparison data validation" classname="comparison/stakeholder-comparison.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Stakeholder Comparison Interface › should show comparison results summary" classname="comparison/stakeholder-comparison.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Stakeholder Comparison Interface › should handle real-time collaboration features" classname="comparison/stakeholder-comparison.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="dashboard/navigation.spec.ts" timestamp="2025-08-09T04:22:17.493Z" hostname="chromium" tests="11" failures="0" skipped="11" time="0" errors="0">
<testcase name="QVF Platform Dashboard Navigation › Executive Dashboard › should display executive dashboard correctly" classname="dashboard/navigation.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Dashboard Navigation › Executive Dashboard › should have access to executive routes only" classname="dashboard/navigation.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Dashboard Navigation › Product Owner Dashboard › should display product owner dashboard correctly" classname="dashboard/navigation.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Dashboard Navigation › Product Owner Dashboard › should navigate between product owner sections" classname="dashboard/navigation.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Dashboard Navigation › Scrum Master Dashboard › should display scrum master dashboard correctly" classname="dashboard/navigation.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Dashboard Navigation › Scrum Master Dashboard › should manage sprint operations" classname="dashboard/navigation.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Dashboard Navigation › Developer Work Items › should display work items page for developer" classname="dashboard/navigation.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Dashboard Navigation › Developer Work Items › should have limited dashboard access" classname="dashboard/navigation.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Dashboard Navigation › Cross-Role Navigation › should show appropriate navigation elements for each role" classname="dashboard/navigation.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Dashboard Navigation › Navigation Accessibility › should have accessible navigation elements" classname="dashboard/navigation.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Dashboard Navigation › Navigation Accessibility › should support keyboard navigation" classname="dashboard/navigation.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="mobile/responsive.spec.ts" timestamp="2025-08-09T04:22:17.493Z" hostname="chromium" tests="17" failures="0" skipped="17" time="0" errors="0">
<testcase name="QVF Platform Mobile Responsive Tests › Mobile Device Login Tests › should work on iPhone 12" classname="mobile/responsive.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Mobile Responsive Tests › Mobile Device Login Tests › should work on iPhone 13 Pro" classname="mobile/responsive.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Mobile Responsive Tests › Mobile Device Login Tests › should work on Pixel 5" classname="mobile/responsive.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Mobile Responsive Tests › Mobile Device Login Tests › should work on Samsung Galaxy S21" classname="mobile/responsive.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Mobile Responsive Tests › Mobile Dashboard Responsive Tests › should adapt dashboard layout for mobile screens" classname="mobile/responsive.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Mobile Responsive Tests › Mobile Dashboard Responsive Tests › should handle mobile work items interface" classname="mobile/responsive.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Mobile Responsive Tests › Tablet Responsive Tests › should provide optimal tablet experience" classname="mobile/responsive.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Mobile Responsive Tests › Custom Viewport Tests › should work at Small Mobile (320x568)" classname="mobile/responsive.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Mobile Responsive Tests › Custom Viewport Tests › should work at Medium Mobile (375x812)" classname="mobile/responsive.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Mobile Responsive Tests › Custom Viewport Tests › should work at Large Mobile (428x926)" classname="mobile/responsive.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Mobile Responsive Tests › Custom Viewport Tests › should work at Small Tablet (768x1024)" classname="mobile/responsive.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Mobile Responsive Tests › Custom Viewport Tests › should work at Large Tablet (1024x1366)" classname="mobile/responsive.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Mobile Responsive Tests › Touch Interaction Tests › should handle touch gestures properly" classname="mobile/responsive.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Mobile Responsive Tests › Orientation Tests › should handle device orientation changes" classname="mobile/responsive.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Mobile Responsive Tests › Mobile-Specific Features › should provide mobile-optimized interactions" classname="mobile/responsive.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Mobile Responsive Tests › Mobile-Specific Features › should handle mobile performance considerations" classname="mobile/responsive.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Mobile Responsive Tests › Accessibility on Mobile › should maintain accessibility standards on mobile" classname="mobile/responsive.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="performance/performance.spec.ts" timestamp="2025-08-09T04:22:17.493Z" hostname="chromium" tests="13" failures="0" skipped="13" time="0" errors="0">
<testcase name="QVF Platform Performance Tests › Page Load Performance › should load login page within performance budget" classname="performance/performance.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Performance Tests › Page Load Performance › should load dashboard pages within performance budget" classname="performance/performance.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Performance Tests › Page Load Performance › should load work items page efficiently" classname="performance/performance.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Performance Tests › API Performance › should have fast authentication API response" classname="performance/performance.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Performance Tests › API Performance › should have efficient QVF scoring API performance" classname="performance/performance.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Performance Tests › API Performance › should handle concurrent API requests efficiently" classname="performance/performance.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Performance Tests › Resource Performance › should have efficient resource loading" classname="performance/performance.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Performance Tests › Resource Performance › should efficiently handle large datasets" classname="performance/performance.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Performance Tests › Memory Performance › should not have excessive memory usage" classname="performance/performance.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Performance Tests › User Interaction Performance › should have responsive UI interactions" classname="performance/performance.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Performance Tests › User Interaction Performance › should handle form input efficiently" classname="performance/performance.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Performance Tests › Network Performance › should handle slow network conditions" classname="performance/performance.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Performance Tests › Network Performance › should handle network errors gracefully" classname="performance/performance.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="qvf/scoring-workflow.spec.ts" timestamp="2025-08-09T04:22:17.493Z" hostname="chromium" tests="9" failures="0" skipped="9" time="0" errors="0">
<testcase name="QVF Scoring Workflow › should access QVF scoring interface" classname="qvf/scoring-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Scoring Workflow › should display work items for QVF scoring" classname="qvf/scoring-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Scoring Workflow › should allow QVF score calculation" classname="qvf/scoring-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Scoring Workflow › should handle work item input for scoring" classname="qvf/scoring-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Scoring Workflow › should validate QVF scoring criteria" classname="qvf/scoring-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Scoring Workflow › should display QVF scoring results properly" classname="qvf/scoring-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Scoring Workflow › should handle bulk QVF scoring operations" classname="qvf/scoring-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Scoring Workflow › should export QVF scoring results" classname="qvf/scoring-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Scoring Workflow › should handle QVF scoring errors gracefully" classname="qvf/scoring-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="qvf-screenshots.spec.ts" timestamp="2025-08-09T04:22:17.493Z" hostname="chromium" tests="2" failures="0" skipped="2" time="0" errors="0">
<testcase name="QVF Platform Screenshot Capture › Capture QVF Platform Screenshots" classname="qvf-screenshots.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Screenshot Capture › Capture Mobile Screenshots" classname="qvf-screenshots.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="visual/visual-regression.spec.ts" timestamp="2025-08-09T04:22:17.493Z" hostname="chromium" tests="17" failures="0" skipped="17" time="0" errors="0">
<testcase name="QVF Platform Visual Regression Tests › Login Page Visual Tests › should match login page visual baseline" classname="visual/visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Visual Regression Tests › Login Page Visual Tests › should match login form visual baseline" classname="visual/visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Visual Regression Tests › Dashboard Visual Tests › should match executive dashboard visual baseline" classname="visual/visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Visual Regression Tests › Dashboard Visual Tests › should match product owner dashboard visual baseline" classname="visual/visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Visual Regression Tests › Dashboard Visual Tests › should match scrum master dashboard visual baseline" classname="visual/visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Visual Regression Tests › Work Items Visual Tests › should match work items page visual baseline" classname="visual/visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Visual Regression Tests › Work Items Visual Tests › should match work item creation form visual baseline" classname="visual/visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Visual Regression Tests › QVF Comparison Visual Tests › should match QVF comparison page visual baseline" classname="visual/visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Visual Regression Tests › Component Visual Tests › should match UI components visual baseline" classname="visual/visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Visual Regression Tests › Component Visual Tests › should match navigation component visual baseline" classname="visual/visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Visual Regression Tests › Error States Visual Tests › should match 404 page visual baseline" classname="visual/visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Visual Regression Tests › Error States Visual Tests › should match error states visual baseline" classname="visual/visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Visual Regression Tests › Theme and Styling Tests › should match different viewport sizes" classname="visual/visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Visual Regression Tests › Theme and Styling Tests › should match print styles" classname="visual/visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Visual Regression Tests › Data Visualization Visual Tests › should match chart and graph visuals" classname="visual/visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Visual Regression Tests › Visual Accessibility Tests › should match high contrast mode visuals" classname="visual/visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Visual Regression Tests › Visual Accessibility Tests › should match focus states visual baseline" classname="visual/visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="work-items/crud-operations.spec.ts" timestamp="2025-08-09T04:22:17.493Z" hostname="chromium" tests="10" failures="0" skipped="10" time="0" errors="0">
<testcase name="Work Items CRUD Operations › Create Work Items › should create a new work item" classname="work-items/crud-operations.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Work Items CRUD Operations › Create Work Items › should validate required fields in work item creation" classname="work-items/crud-operations.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Work Items CRUD Operations › Read Work Items › should display work items list" classname="work-items/crud-operations.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Work Items CRUD Operations › Read Work Items › should allow work item search and filtering" classname="work-items/crud-operations.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Work Items CRUD Operations › Read Work Items › should display work item details" classname="work-items/crud-operations.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Work Items CRUD Operations › Update Work Items › should edit existing work item" classname="work-items/crud-operations.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Work Items CRUD Operations › Update Work Items › should update work item priority" classname="work-items/crud-operations.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Work Items CRUD Operations › Delete Work Items › should delete work item with confirmation" classname="work-items/crud-operations.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Work Items CRUD Operations › Delete Work Items › should cancel work item deletion" classname="work-items/crud-operations.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Work Items CRUD Operations › Bulk Operations › should perform bulk operations on work items" classname="work-items/crud-operations.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="api/integration.spec.ts" timestamp="2025-08-09T04:22:17.493Z" hostname="firefox" tests="21" failures="0" skipped="21" time="0" errors="0">
<testcase name="QVF Platform API Integration Tests › Authentication API › should authenticate with valid credentials" classname="api/integration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform API Integration Tests › Authentication API › should reject invalid credentials" classname="api/integration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform API Integration Tests › Authentication API › should return user info with valid token" classname="api/integration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform API Integration Tests › Authentication API › should reject requests without token" classname="api/integration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform API Integration Tests › Authentication API › should reject requests with invalid token" classname="api/integration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform API Integration Tests › Health Check API › should return system health status" classname="api/integration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform API Integration Tests › Health Check API › should return version information" classname="api/integration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform API Integration Tests › Work Items API › should fetch work items list" classname="api/integration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform API Integration Tests › Work Items API › should create new work item" classname="api/integration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform API Integration Tests › Work Items API › should update existing work item" classname="api/integration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform API Integration Tests › Work Items API › should delete work item" classname="api/integration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform API Integration Tests › QVF Scoring API › should calculate QVF scores for work items" classname="api/integration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform API Integration Tests › QVF Scoring API › should fetch QVF criteria" classname="api/integration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform API Integration Tests › QVF Scoring API › should handle invalid QVF scoring requests" classname="api/integration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform API Integration Tests › Role-Based Access Control › should enforce role-based API access" classname="api/integration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform API Integration Tests › Error Handling › should handle malformed requests" classname="api/integration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform API Integration Tests › Error Handling › should handle missing required fields" classname="api/integration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform API Integration Tests › Error Handling › should handle server errors gracefully" classname="api/integration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform API Integration Tests › API Response Format › should return consistent response formats" classname="api/integration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform API Integration Tests › API Response Format › should include proper HTTP status codes" classname="api/integration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform API Integration Tests › Data Persistence › should persist data across API calls" classname="api/integration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="auth/authentication.spec.ts" timestamp="2025-08-09T04:22:17.493Z" hostname="firefox" tests="15" failures="0" skipped="15" time="0" errors="0">
<testcase name="QVF Platform Authentication › should display login page correctly" classname="auth/authentication.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Authentication › should reject invalid credentials" classname="auth/authentication.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Authentication › should handle empty form submission" classname="auth/authentication.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Authentication › should login successfully as executive" classname="auth/authentication.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Authentication › should login successfully as product_owner" classname="auth/authentication.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Authentication › should login successfully as scrum_master" classname="auth/authentication.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Authentication › should login successfully as developer" classname="auth/authentication.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Authentication › should logout successfully as executive" classname="auth/authentication.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Authentication › should logout successfully as product_owner" classname="auth/authentication.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Authentication › should logout successfully as scrum_master" classname="auth/authentication.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Authentication › should logout successfully as developer" classname="auth/authentication.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Authentication › should maintain session across page refreshes" classname="auth/authentication.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Authentication › should redirect to login when accessing protected routes without authentication" classname="auth/authentication.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Authentication › should handle concurrent login sessions" classname="auth/authentication.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Authentication › should handle token expiration gracefully" classname="auth/authentication.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="comparison/stakeholder-comparison.spec.ts" timestamp="2025-08-09T04:22:17.493Z" hostname="firefox" tests="11" failures="0" skipped="11" time="0" errors="0">
<testcase name="QVF Stakeholder Comparison Interface › should access stakeholder comparison interface" classname="comparison/stakeholder-comparison.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Stakeholder Comparison Interface › should display comparison matrix" classname="comparison/stakeholder-comparison.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Stakeholder Comparison Interface › should allow stakeholder input selection" classname="comparison/stakeholder-comparison.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Stakeholder Comparison Interface › should handle pairwise comparisons" classname="comparison/stakeholder-comparison.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Stakeholder Comparison Interface › should show comparison progress" classname="comparison/stakeholder-comparison.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Stakeholder Comparison Interface › should display consistency indicators" classname="comparison/stakeholder-comparison.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Stakeholder Comparison Interface › should handle different stakeholder perspectives" classname="comparison/stakeholder-comparison.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Stakeholder Comparison Interface › should allow comparison result export" classname="comparison/stakeholder-comparison.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Stakeholder Comparison Interface › should handle comparison data validation" classname="comparison/stakeholder-comparison.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Stakeholder Comparison Interface › should show comparison results summary" classname="comparison/stakeholder-comparison.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Stakeholder Comparison Interface › should handle real-time collaboration features" classname="comparison/stakeholder-comparison.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="dashboard/navigation.spec.ts" timestamp="2025-08-09T04:22:17.493Z" hostname="firefox" tests="11" failures="0" skipped="11" time="0" errors="0">
<testcase name="QVF Platform Dashboard Navigation › Executive Dashboard › should display executive dashboard correctly" classname="dashboard/navigation.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Dashboard Navigation › Executive Dashboard › should have access to executive routes only" classname="dashboard/navigation.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Dashboard Navigation › Product Owner Dashboard › should display product owner dashboard correctly" classname="dashboard/navigation.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Dashboard Navigation › Product Owner Dashboard › should navigate between product owner sections" classname="dashboard/navigation.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Dashboard Navigation › Scrum Master Dashboard › should display scrum master dashboard correctly" classname="dashboard/navigation.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Dashboard Navigation › Scrum Master Dashboard › should manage sprint operations" classname="dashboard/navigation.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Dashboard Navigation › Developer Work Items › should display work items page for developer" classname="dashboard/navigation.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Dashboard Navigation › Developer Work Items › should have limited dashboard access" classname="dashboard/navigation.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Dashboard Navigation › Cross-Role Navigation › should show appropriate navigation elements for each role" classname="dashboard/navigation.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Dashboard Navigation › Navigation Accessibility › should have accessible navigation elements" classname="dashboard/navigation.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Dashboard Navigation › Navigation Accessibility › should support keyboard navigation" classname="dashboard/navigation.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="mobile/responsive.spec.ts" timestamp="2025-08-09T04:22:17.493Z" hostname="firefox" tests="17" failures="0" skipped="17" time="0" errors="0">
<testcase name="QVF Platform Mobile Responsive Tests › Mobile Device Login Tests › should work on iPhone 12" classname="mobile/responsive.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Mobile Responsive Tests › Mobile Device Login Tests › should work on iPhone 13 Pro" classname="mobile/responsive.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Mobile Responsive Tests › Mobile Device Login Tests › should work on Pixel 5" classname="mobile/responsive.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Mobile Responsive Tests › Mobile Device Login Tests › should work on Samsung Galaxy S21" classname="mobile/responsive.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Mobile Responsive Tests › Mobile Dashboard Responsive Tests › should adapt dashboard layout for mobile screens" classname="mobile/responsive.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Mobile Responsive Tests › Mobile Dashboard Responsive Tests › should handle mobile work items interface" classname="mobile/responsive.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Mobile Responsive Tests › Tablet Responsive Tests › should provide optimal tablet experience" classname="mobile/responsive.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Mobile Responsive Tests › Custom Viewport Tests › should work at Small Mobile (320x568)" classname="mobile/responsive.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Mobile Responsive Tests › Custom Viewport Tests › should work at Medium Mobile (375x812)" classname="mobile/responsive.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Mobile Responsive Tests › Custom Viewport Tests › should work at Large Mobile (428x926)" classname="mobile/responsive.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Mobile Responsive Tests › Custom Viewport Tests › should work at Small Tablet (768x1024)" classname="mobile/responsive.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Mobile Responsive Tests › Custom Viewport Tests › should work at Large Tablet (1024x1366)" classname="mobile/responsive.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Mobile Responsive Tests › Touch Interaction Tests › should handle touch gestures properly" classname="mobile/responsive.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Mobile Responsive Tests › Orientation Tests › should handle device orientation changes" classname="mobile/responsive.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Mobile Responsive Tests › Mobile-Specific Features › should provide mobile-optimized interactions" classname="mobile/responsive.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Mobile Responsive Tests › Mobile-Specific Features › should handle mobile performance considerations" classname="mobile/responsive.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Mobile Responsive Tests › Accessibility on Mobile › should maintain accessibility standards on mobile" classname="mobile/responsive.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="performance/performance.spec.ts" timestamp="2025-08-09T04:22:17.493Z" hostname="firefox" tests="13" failures="0" skipped="13" time="0" errors="0">
<testcase name="QVF Platform Performance Tests › Page Load Performance › should load login page within performance budget" classname="performance/performance.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Performance Tests › Page Load Performance › should load dashboard pages within performance budget" classname="performance/performance.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Performance Tests › Page Load Performance › should load work items page efficiently" classname="performance/performance.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Performance Tests › API Performance › should have fast authentication API response" classname="performance/performance.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Performance Tests › API Performance › should have efficient QVF scoring API performance" classname="performance/performance.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Performance Tests › API Performance › should handle concurrent API requests efficiently" classname="performance/performance.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Performance Tests › Resource Performance › should have efficient resource loading" classname="performance/performance.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Performance Tests › Resource Performance › should efficiently handle large datasets" classname="performance/performance.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Performance Tests › Memory Performance › should not have excessive memory usage" classname="performance/performance.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Performance Tests › User Interaction Performance › should have responsive UI interactions" classname="performance/performance.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Performance Tests › User Interaction Performance › should handle form input efficiently" classname="performance/performance.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Performance Tests › Network Performance › should handle slow network conditions" classname="performance/performance.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Performance Tests › Network Performance › should handle network errors gracefully" classname="performance/performance.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="qvf/scoring-workflow.spec.ts" timestamp="2025-08-09T04:22:17.493Z" hostname="firefox" tests="9" failures="0" skipped="9" time="0" errors="0">
<testcase name="QVF Scoring Workflow › should access QVF scoring interface" classname="qvf/scoring-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Scoring Workflow › should display work items for QVF scoring" classname="qvf/scoring-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Scoring Workflow › should allow QVF score calculation" classname="qvf/scoring-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Scoring Workflow › should handle work item input for scoring" classname="qvf/scoring-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Scoring Workflow › should validate QVF scoring criteria" classname="qvf/scoring-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Scoring Workflow › should display QVF scoring results properly" classname="qvf/scoring-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Scoring Workflow › should handle bulk QVF scoring operations" classname="qvf/scoring-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Scoring Workflow › should export QVF scoring results" classname="qvf/scoring-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Scoring Workflow › should handle QVF scoring errors gracefully" classname="qvf/scoring-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="qvf-screenshots.spec.ts" timestamp="2025-08-09T04:22:17.493Z" hostname="firefox" tests="2" failures="0" skipped="2" time="0" errors="0">
<testcase name="QVF Platform Screenshot Capture › Capture QVF Platform Screenshots" classname="qvf-screenshots.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Screenshot Capture › Capture Mobile Screenshots" classname="qvf-screenshots.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="visual/visual-regression.spec.ts" timestamp="2025-08-09T04:22:17.493Z" hostname="firefox" tests="17" failures="0" skipped="17" time="0" errors="0">
<testcase name="QVF Platform Visual Regression Tests › Login Page Visual Tests › should match login page visual baseline" classname="visual/visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Visual Regression Tests › Login Page Visual Tests › should match login form visual baseline" classname="visual/visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Visual Regression Tests › Dashboard Visual Tests › should match executive dashboard visual baseline" classname="visual/visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Visual Regression Tests › Dashboard Visual Tests › should match product owner dashboard visual baseline" classname="visual/visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Visual Regression Tests › Dashboard Visual Tests › should match scrum master dashboard visual baseline" classname="visual/visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Visual Regression Tests › Work Items Visual Tests › should match work items page visual baseline" classname="visual/visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Visual Regression Tests › Work Items Visual Tests › should match work item creation form visual baseline" classname="visual/visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Visual Regression Tests › QVF Comparison Visual Tests › should match QVF comparison page visual baseline" classname="visual/visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Visual Regression Tests › Component Visual Tests › should match UI components visual baseline" classname="visual/visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Visual Regression Tests › Component Visual Tests › should match navigation component visual baseline" classname="visual/visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Visual Regression Tests › Error States Visual Tests › should match 404 page visual baseline" classname="visual/visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Visual Regression Tests › Error States Visual Tests › should match error states visual baseline" classname="visual/visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Visual Regression Tests › Theme and Styling Tests › should match different viewport sizes" classname="visual/visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Visual Regression Tests › Theme and Styling Tests › should match print styles" classname="visual/visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Visual Regression Tests › Data Visualization Visual Tests › should match chart and graph visuals" classname="visual/visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Visual Regression Tests › Visual Accessibility Tests › should match high contrast mode visuals" classname="visual/visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Visual Regression Tests › Visual Accessibility Tests › should match focus states visual baseline" classname="visual/visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="work-items/crud-operations.spec.ts" timestamp="2025-08-09T04:22:17.493Z" hostname="firefox" tests="10" failures="0" skipped="10" time="0" errors="0">
<testcase name="Work Items CRUD Operations › Create Work Items › should create a new work item" classname="work-items/crud-operations.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Work Items CRUD Operations › Create Work Items › should validate required fields in work item creation" classname="work-items/crud-operations.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Work Items CRUD Operations › Read Work Items › should display work items list" classname="work-items/crud-operations.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Work Items CRUD Operations › Read Work Items › should allow work item search and filtering" classname="work-items/crud-operations.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Work Items CRUD Operations › Read Work Items › should display work item details" classname="work-items/crud-operations.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Work Items CRUD Operations › Update Work Items › should edit existing work item" classname="work-items/crud-operations.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Work Items CRUD Operations › Update Work Items › should update work item priority" classname="work-items/crud-operations.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Work Items CRUD Operations › Delete Work Items › should delete work item with confirmation" classname="work-items/crud-operations.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Work Items CRUD Operations › Delete Work Items › should cancel work item deletion" classname="work-items/crud-operations.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Work Items CRUD Operations › Bulk Operations › should perform bulk operations on work items" classname="work-items/crud-operations.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="api/integration.spec.ts" timestamp="2025-08-09T04:22:17.493Z" hostname="webkit" tests="21" failures="0" skipped="21" time="0" errors="0">
<testcase name="QVF Platform API Integration Tests › Authentication API › should authenticate with valid credentials" classname="api/integration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform API Integration Tests › Authentication API › should reject invalid credentials" classname="api/integration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform API Integration Tests › Authentication API › should return user info with valid token" classname="api/integration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform API Integration Tests › Authentication API › should reject requests without token" classname="api/integration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform API Integration Tests › Authentication API › should reject requests with invalid token" classname="api/integration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform API Integration Tests › Health Check API › should return system health status" classname="api/integration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform API Integration Tests › Health Check API › should return version information" classname="api/integration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform API Integration Tests › Work Items API › should fetch work items list" classname="api/integration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform API Integration Tests › Work Items API › should create new work item" classname="api/integration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform API Integration Tests › Work Items API › should update existing work item" classname="api/integration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform API Integration Tests › Work Items API › should delete work item" classname="api/integration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform API Integration Tests › QVF Scoring API › should calculate QVF scores for work items" classname="api/integration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform API Integration Tests › QVF Scoring API › should fetch QVF criteria" classname="api/integration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform API Integration Tests › QVF Scoring API › should handle invalid QVF scoring requests" classname="api/integration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform API Integration Tests › Role-Based Access Control › should enforce role-based API access" classname="api/integration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform API Integration Tests › Error Handling › should handle malformed requests" classname="api/integration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform API Integration Tests › Error Handling › should handle missing required fields" classname="api/integration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform API Integration Tests › Error Handling › should handle server errors gracefully" classname="api/integration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform API Integration Tests › API Response Format › should return consistent response formats" classname="api/integration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform API Integration Tests › API Response Format › should include proper HTTP status codes" classname="api/integration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform API Integration Tests › Data Persistence › should persist data across API calls" classname="api/integration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="auth/authentication.spec.ts" timestamp="2025-08-09T04:22:17.493Z" hostname="webkit" tests="15" failures="0" skipped="15" time="0" errors="0">
<testcase name="QVF Platform Authentication › should display login page correctly" classname="auth/authentication.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Authentication › should reject invalid credentials" classname="auth/authentication.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Authentication › should handle empty form submission" classname="auth/authentication.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Authentication › should login successfully as executive" classname="auth/authentication.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Authentication › should login successfully as product_owner" classname="auth/authentication.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Authentication › should login successfully as scrum_master" classname="auth/authentication.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Authentication › should login successfully as developer" classname="auth/authentication.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Authentication › should logout successfully as executive" classname="auth/authentication.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Authentication › should logout successfully as product_owner" classname="auth/authentication.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Authentication › should logout successfully as scrum_master" classname="auth/authentication.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Authentication › should logout successfully as developer" classname="auth/authentication.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Authentication › should maintain session across page refreshes" classname="auth/authentication.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Authentication › should redirect to login when accessing protected routes without authentication" classname="auth/authentication.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Authentication › should handle concurrent login sessions" classname="auth/authentication.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Authentication › should handle token expiration gracefully" classname="auth/authentication.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="comparison/stakeholder-comparison.spec.ts" timestamp="2025-08-09T04:22:17.493Z" hostname="webkit" tests="11" failures="0" skipped="11" time="0" errors="0">
<testcase name="QVF Stakeholder Comparison Interface › should access stakeholder comparison interface" classname="comparison/stakeholder-comparison.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Stakeholder Comparison Interface › should display comparison matrix" classname="comparison/stakeholder-comparison.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Stakeholder Comparison Interface › should allow stakeholder input selection" classname="comparison/stakeholder-comparison.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Stakeholder Comparison Interface › should handle pairwise comparisons" classname="comparison/stakeholder-comparison.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Stakeholder Comparison Interface › should show comparison progress" classname="comparison/stakeholder-comparison.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Stakeholder Comparison Interface › should display consistency indicators" classname="comparison/stakeholder-comparison.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Stakeholder Comparison Interface › should handle different stakeholder perspectives" classname="comparison/stakeholder-comparison.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Stakeholder Comparison Interface › should allow comparison result export" classname="comparison/stakeholder-comparison.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Stakeholder Comparison Interface › should handle comparison data validation" classname="comparison/stakeholder-comparison.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Stakeholder Comparison Interface › should show comparison results summary" classname="comparison/stakeholder-comparison.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Stakeholder Comparison Interface › should handle real-time collaboration features" classname="comparison/stakeholder-comparison.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="dashboard/navigation.spec.ts" timestamp="2025-08-09T04:22:17.493Z" hostname="webkit" tests="11" failures="0" skipped="11" time="0" errors="0">
<testcase name="QVF Platform Dashboard Navigation › Executive Dashboard › should display executive dashboard correctly" classname="dashboard/navigation.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Dashboard Navigation › Executive Dashboard › should have access to executive routes only" classname="dashboard/navigation.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Dashboard Navigation › Product Owner Dashboard › should display product owner dashboard correctly" classname="dashboard/navigation.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Dashboard Navigation › Product Owner Dashboard › should navigate between product owner sections" classname="dashboard/navigation.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Dashboard Navigation › Scrum Master Dashboard › should display scrum master dashboard correctly" classname="dashboard/navigation.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Dashboard Navigation › Scrum Master Dashboard › should manage sprint operations" classname="dashboard/navigation.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Dashboard Navigation › Developer Work Items › should display work items page for developer" classname="dashboard/navigation.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Dashboard Navigation › Developer Work Items › should have limited dashboard access" classname="dashboard/navigation.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Dashboard Navigation › Cross-Role Navigation › should show appropriate navigation elements for each role" classname="dashboard/navigation.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Dashboard Navigation › Navigation Accessibility › should have accessible navigation elements" classname="dashboard/navigation.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Dashboard Navigation › Navigation Accessibility › should support keyboard navigation" classname="dashboard/navigation.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="mobile/responsive.spec.ts" timestamp="2025-08-09T04:22:17.493Z" hostname="webkit" tests="17" failures="0" skipped="17" time="0" errors="0">
<testcase name="QVF Platform Mobile Responsive Tests › Mobile Device Login Tests › should work on iPhone 12" classname="mobile/responsive.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Mobile Responsive Tests › Mobile Device Login Tests › should work on iPhone 13 Pro" classname="mobile/responsive.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Mobile Responsive Tests › Mobile Device Login Tests › should work on Pixel 5" classname="mobile/responsive.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Mobile Responsive Tests › Mobile Device Login Tests › should work on Samsung Galaxy S21" classname="mobile/responsive.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Mobile Responsive Tests › Mobile Dashboard Responsive Tests › should adapt dashboard layout for mobile screens" classname="mobile/responsive.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Mobile Responsive Tests › Mobile Dashboard Responsive Tests › should handle mobile work items interface" classname="mobile/responsive.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Mobile Responsive Tests › Tablet Responsive Tests › should provide optimal tablet experience" classname="mobile/responsive.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Mobile Responsive Tests › Custom Viewport Tests › should work at Small Mobile (320x568)" classname="mobile/responsive.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Mobile Responsive Tests › Custom Viewport Tests › should work at Medium Mobile (375x812)" classname="mobile/responsive.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Mobile Responsive Tests › Custom Viewport Tests › should work at Large Mobile (428x926)" classname="mobile/responsive.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Mobile Responsive Tests › Custom Viewport Tests › should work at Small Tablet (768x1024)" classname="mobile/responsive.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Mobile Responsive Tests › Custom Viewport Tests › should work at Large Tablet (1024x1366)" classname="mobile/responsive.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Mobile Responsive Tests › Touch Interaction Tests › should handle touch gestures properly" classname="mobile/responsive.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Mobile Responsive Tests › Orientation Tests › should handle device orientation changes" classname="mobile/responsive.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Mobile Responsive Tests › Mobile-Specific Features › should provide mobile-optimized interactions" classname="mobile/responsive.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Mobile Responsive Tests › Mobile-Specific Features › should handle mobile performance considerations" classname="mobile/responsive.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Mobile Responsive Tests › Accessibility on Mobile › should maintain accessibility standards on mobile" classname="mobile/responsive.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="performance/performance.spec.ts" timestamp="2025-08-09T04:22:17.493Z" hostname="webkit" tests="13" failures="0" skipped="13" time="0" errors="0">
<testcase name="QVF Platform Performance Tests › Page Load Performance › should load login page within performance budget" classname="performance/performance.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Performance Tests › Page Load Performance › should load dashboard pages within performance budget" classname="performance/performance.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Performance Tests › Page Load Performance › should load work items page efficiently" classname="performance/performance.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Performance Tests › API Performance › should have fast authentication API response" classname="performance/performance.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Performance Tests › API Performance › should have efficient QVF scoring API performance" classname="performance/performance.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Performance Tests › API Performance › should handle concurrent API requests efficiently" classname="performance/performance.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Performance Tests › Resource Performance › should have efficient resource loading" classname="performance/performance.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Performance Tests › Resource Performance › should efficiently handle large datasets" classname="performance/performance.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Performance Tests › Memory Performance › should not have excessive memory usage" classname="performance/performance.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Performance Tests › User Interaction Performance › should have responsive UI interactions" classname="performance/performance.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Performance Tests › User Interaction Performance › should handle form input efficiently" classname="performance/performance.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Performance Tests › Network Performance › should handle slow network conditions" classname="performance/performance.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Performance Tests › Network Performance › should handle network errors gracefully" classname="performance/performance.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="qvf/scoring-workflow.spec.ts" timestamp="2025-08-09T04:22:17.493Z" hostname="webkit" tests="9" failures="0" skipped="9" time="0" errors="0">
<testcase name="QVF Scoring Workflow › should access QVF scoring interface" classname="qvf/scoring-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Scoring Workflow › should display work items for QVF scoring" classname="qvf/scoring-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Scoring Workflow › should allow QVF score calculation" classname="qvf/scoring-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Scoring Workflow › should handle work item input for scoring" classname="qvf/scoring-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Scoring Workflow › should validate QVF scoring criteria" classname="qvf/scoring-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Scoring Workflow › should display QVF scoring results properly" classname="qvf/scoring-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Scoring Workflow › should handle bulk QVF scoring operations" classname="qvf/scoring-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Scoring Workflow › should export QVF scoring results" classname="qvf/scoring-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Scoring Workflow › should handle QVF scoring errors gracefully" classname="qvf/scoring-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="qvf-screenshots.spec.ts" timestamp="2025-08-09T04:22:17.493Z" hostname="webkit" tests="2" failures="0" skipped="2" time="0" errors="0">
<testcase name="QVF Platform Screenshot Capture › Capture QVF Platform Screenshots" classname="qvf-screenshots.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Screenshot Capture › Capture Mobile Screenshots" classname="qvf-screenshots.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="visual/visual-regression.spec.ts" timestamp="2025-08-09T04:22:17.493Z" hostname="webkit" tests="17" failures="0" skipped="17" time="0" errors="0">
<testcase name="QVF Platform Visual Regression Tests › Login Page Visual Tests › should match login page visual baseline" classname="visual/visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Visual Regression Tests › Login Page Visual Tests › should match login form visual baseline" classname="visual/visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Visual Regression Tests › Dashboard Visual Tests › should match executive dashboard visual baseline" classname="visual/visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Visual Regression Tests › Dashboard Visual Tests › should match product owner dashboard visual baseline" classname="visual/visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Visual Regression Tests › Dashboard Visual Tests › should match scrum master dashboard visual baseline" classname="visual/visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Visual Regression Tests › Work Items Visual Tests › should match work items page visual baseline" classname="visual/visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Visual Regression Tests › Work Items Visual Tests › should match work item creation form visual baseline" classname="visual/visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Visual Regression Tests › QVF Comparison Visual Tests › should match QVF comparison page visual baseline" classname="visual/visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Visual Regression Tests › Component Visual Tests › should match UI components visual baseline" classname="visual/visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Visual Regression Tests › Component Visual Tests › should match navigation component visual baseline" classname="visual/visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Visual Regression Tests › Error States Visual Tests › should match 404 page visual baseline" classname="visual/visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Visual Regression Tests › Error States Visual Tests › should match error states visual baseline" classname="visual/visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Visual Regression Tests › Theme and Styling Tests › should match different viewport sizes" classname="visual/visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Visual Regression Tests › Theme and Styling Tests › should match print styles" classname="visual/visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Visual Regression Tests › Data Visualization Visual Tests › should match chart and graph visuals" classname="visual/visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Visual Regression Tests › Visual Accessibility Tests › should match high contrast mode visuals" classname="visual/visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Visual Regression Tests › Visual Accessibility Tests › should match focus states visual baseline" classname="visual/visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="work-items/crud-operations.spec.ts" timestamp="2025-08-09T04:22:17.493Z" hostname="webkit" tests="10" failures="0" skipped="10" time="0" errors="0">
<testcase name="Work Items CRUD Operations › Create Work Items › should create a new work item" classname="work-items/crud-operations.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Work Items CRUD Operations › Create Work Items › should validate required fields in work item creation" classname="work-items/crud-operations.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Work Items CRUD Operations › Read Work Items › should display work items list" classname="work-items/crud-operations.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Work Items CRUD Operations › Read Work Items › should allow work item search and filtering" classname="work-items/crud-operations.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Work Items CRUD Operations › Read Work Items › should display work item details" classname="work-items/crud-operations.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Work Items CRUD Operations › Update Work Items › should edit existing work item" classname="work-items/crud-operations.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Work Items CRUD Operations › Update Work Items › should update work item priority" classname="work-items/crud-operations.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Work Items CRUD Operations › Delete Work Items › should delete work item with confirmation" classname="work-items/crud-operations.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Work Items CRUD Operations › Delete Work Items › should cancel work item deletion" classname="work-items/crud-operations.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Work Items CRUD Operations › Bulk Operations › should perform bulk operations on work items" classname="work-items/crud-operations.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="api/integration.spec.ts" timestamp="2025-08-09T04:22:17.493Z" hostname="mobile-chrome" tests="21" failures="0" skipped="21" time="0" errors="0">
<testcase name="QVF Platform API Integration Tests › Authentication API › should authenticate with valid credentials" classname="api/integration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform API Integration Tests › Authentication API › should reject invalid credentials" classname="api/integration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform API Integration Tests › Authentication API › should return user info with valid token" classname="api/integration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform API Integration Tests › Authentication API › should reject requests without token" classname="api/integration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform API Integration Tests › Authentication API › should reject requests with invalid token" classname="api/integration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform API Integration Tests › Health Check API › should return system health status" classname="api/integration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform API Integration Tests › Health Check API › should return version information" classname="api/integration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform API Integration Tests › Work Items API › should fetch work items list" classname="api/integration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform API Integration Tests › Work Items API › should create new work item" classname="api/integration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform API Integration Tests › Work Items API › should update existing work item" classname="api/integration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform API Integration Tests › Work Items API › should delete work item" classname="api/integration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform API Integration Tests › QVF Scoring API › should calculate QVF scores for work items" classname="api/integration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform API Integration Tests › QVF Scoring API › should fetch QVF criteria" classname="api/integration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform API Integration Tests › QVF Scoring API › should handle invalid QVF scoring requests" classname="api/integration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform API Integration Tests › Role-Based Access Control › should enforce role-based API access" classname="api/integration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform API Integration Tests › Error Handling › should handle malformed requests" classname="api/integration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform API Integration Tests › Error Handling › should handle missing required fields" classname="api/integration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform API Integration Tests › Error Handling › should handle server errors gracefully" classname="api/integration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform API Integration Tests › API Response Format › should return consistent response formats" classname="api/integration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform API Integration Tests › API Response Format › should include proper HTTP status codes" classname="api/integration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform API Integration Tests › Data Persistence › should persist data across API calls" classname="api/integration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="auth/authentication.spec.ts" timestamp="2025-08-09T04:22:17.493Z" hostname="mobile-chrome" tests="15" failures="0" skipped="15" time="0" errors="0">
<testcase name="QVF Platform Authentication › should display login page correctly" classname="auth/authentication.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Authentication › should reject invalid credentials" classname="auth/authentication.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Authentication › should handle empty form submission" classname="auth/authentication.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Authentication › should login successfully as executive" classname="auth/authentication.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Authentication › should login successfully as product_owner" classname="auth/authentication.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Authentication › should login successfully as scrum_master" classname="auth/authentication.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Authentication › should login successfully as developer" classname="auth/authentication.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Authentication › should logout successfully as executive" classname="auth/authentication.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Authentication › should logout successfully as product_owner" classname="auth/authentication.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Authentication › should logout successfully as scrum_master" classname="auth/authentication.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Authentication › should logout successfully as developer" classname="auth/authentication.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Authentication › should maintain session across page refreshes" classname="auth/authentication.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Authentication › should redirect to login when accessing protected routes without authentication" classname="auth/authentication.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Authentication › should handle concurrent login sessions" classname="auth/authentication.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Authentication › should handle token expiration gracefully" classname="auth/authentication.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="comparison/stakeholder-comparison.spec.ts" timestamp="2025-08-09T04:22:17.493Z" hostname="mobile-chrome" tests="11" failures="0" skipped="11" time="0" errors="0">
<testcase name="QVF Stakeholder Comparison Interface › should access stakeholder comparison interface" classname="comparison/stakeholder-comparison.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Stakeholder Comparison Interface › should display comparison matrix" classname="comparison/stakeholder-comparison.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Stakeholder Comparison Interface › should allow stakeholder input selection" classname="comparison/stakeholder-comparison.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Stakeholder Comparison Interface › should handle pairwise comparisons" classname="comparison/stakeholder-comparison.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Stakeholder Comparison Interface › should show comparison progress" classname="comparison/stakeholder-comparison.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Stakeholder Comparison Interface › should display consistency indicators" classname="comparison/stakeholder-comparison.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Stakeholder Comparison Interface › should handle different stakeholder perspectives" classname="comparison/stakeholder-comparison.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Stakeholder Comparison Interface › should allow comparison result export" classname="comparison/stakeholder-comparison.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Stakeholder Comparison Interface › should handle comparison data validation" classname="comparison/stakeholder-comparison.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Stakeholder Comparison Interface › should show comparison results summary" classname="comparison/stakeholder-comparison.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Stakeholder Comparison Interface › should handle real-time collaboration features" classname="comparison/stakeholder-comparison.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="dashboard/navigation.spec.ts" timestamp="2025-08-09T04:22:17.493Z" hostname="mobile-chrome" tests="11" failures="0" skipped="11" time="0" errors="0">
<testcase name="QVF Platform Dashboard Navigation › Executive Dashboard › should display executive dashboard correctly" classname="dashboard/navigation.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Dashboard Navigation › Executive Dashboard › should have access to executive routes only" classname="dashboard/navigation.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Dashboard Navigation › Product Owner Dashboard › should display product owner dashboard correctly" classname="dashboard/navigation.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Dashboard Navigation › Product Owner Dashboard › should navigate between product owner sections" classname="dashboard/navigation.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Dashboard Navigation › Scrum Master Dashboard › should display scrum master dashboard correctly" classname="dashboard/navigation.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Dashboard Navigation › Scrum Master Dashboard › should manage sprint operations" classname="dashboard/navigation.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Dashboard Navigation › Developer Work Items › should display work items page for developer" classname="dashboard/navigation.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Dashboard Navigation › Developer Work Items › should have limited dashboard access" classname="dashboard/navigation.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Dashboard Navigation › Cross-Role Navigation › should show appropriate navigation elements for each role" classname="dashboard/navigation.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Dashboard Navigation › Navigation Accessibility › should have accessible navigation elements" classname="dashboard/navigation.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Dashboard Navigation › Navigation Accessibility › should support keyboard navigation" classname="dashboard/navigation.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="mobile/responsive.spec.ts" timestamp="2025-08-09T04:22:17.493Z" hostname="mobile-chrome" tests="17" failures="0" skipped="17" time="0" errors="0">
<testcase name="QVF Platform Mobile Responsive Tests › Mobile Device Login Tests › should work on iPhone 12" classname="mobile/responsive.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Mobile Responsive Tests › Mobile Device Login Tests › should work on iPhone 13 Pro" classname="mobile/responsive.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Mobile Responsive Tests › Mobile Device Login Tests › should work on Pixel 5" classname="mobile/responsive.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Mobile Responsive Tests › Mobile Device Login Tests › should work on Samsung Galaxy S21" classname="mobile/responsive.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Mobile Responsive Tests › Mobile Dashboard Responsive Tests › should adapt dashboard layout for mobile screens" classname="mobile/responsive.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Mobile Responsive Tests › Mobile Dashboard Responsive Tests › should handle mobile work items interface" classname="mobile/responsive.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Mobile Responsive Tests › Tablet Responsive Tests › should provide optimal tablet experience" classname="mobile/responsive.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Mobile Responsive Tests › Custom Viewport Tests › should work at Small Mobile (320x568)" classname="mobile/responsive.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Mobile Responsive Tests › Custom Viewport Tests › should work at Medium Mobile (375x812)" classname="mobile/responsive.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Mobile Responsive Tests › Custom Viewport Tests › should work at Large Mobile (428x926)" classname="mobile/responsive.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Mobile Responsive Tests › Custom Viewport Tests › should work at Small Tablet (768x1024)" classname="mobile/responsive.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Mobile Responsive Tests › Custom Viewport Tests › should work at Large Tablet (1024x1366)" classname="mobile/responsive.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Mobile Responsive Tests › Touch Interaction Tests › should handle touch gestures properly" classname="mobile/responsive.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Mobile Responsive Tests › Orientation Tests › should handle device orientation changes" classname="mobile/responsive.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Mobile Responsive Tests › Mobile-Specific Features › should provide mobile-optimized interactions" classname="mobile/responsive.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Mobile Responsive Tests › Mobile-Specific Features › should handle mobile performance considerations" classname="mobile/responsive.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Mobile Responsive Tests › Accessibility on Mobile › should maintain accessibility standards on mobile" classname="mobile/responsive.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="qvf/scoring-workflow.spec.ts" timestamp="2025-08-09T04:22:17.493Z" hostname="mobile-chrome" tests="9" failures="0" skipped="9" time="0" errors="0">
<testcase name="QVF Scoring Workflow › should access QVF scoring interface" classname="qvf/scoring-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Scoring Workflow › should display work items for QVF scoring" classname="qvf/scoring-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Scoring Workflow › should allow QVF score calculation" classname="qvf/scoring-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Scoring Workflow › should handle work item input for scoring" classname="qvf/scoring-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Scoring Workflow › should validate QVF scoring criteria" classname="qvf/scoring-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Scoring Workflow › should display QVF scoring results properly" classname="qvf/scoring-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Scoring Workflow › should handle bulk QVF scoring operations" classname="qvf/scoring-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Scoring Workflow › should export QVF scoring results" classname="qvf/scoring-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Scoring Workflow › should handle QVF scoring errors gracefully" classname="qvf/scoring-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="qvf-screenshots.spec.ts" timestamp="2025-08-09T04:22:17.493Z" hostname="mobile-chrome" tests="2" failures="0" skipped="2" time="0" errors="0">
<testcase name="QVF Platform Screenshot Capture › Capture QVF Platform Screenshots" classname="qvf-screenshots.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Screenshot Capture › Capture Mobile Screenshots" classname="qvf-screenshots.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="visual/visual-regression.spec.ts" timestamp="2025-08-09T04:22:17.493Z" hostname="mobile-chrome" tests="17" failures="0" skipped="17" time="0" errors="0">
<testcase name="QVF Platform Visual Regression Tests › Login Page Visual Tests › should match login page visual baseline" classname="visual/visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Visual Regression Tests › Login Page Visual Tests › should match login form visual baseline" classname="visual/visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Visual Regression Tests › Dashboard Visual Tests › should match executive dashboard visual baseline" classname="visual/visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Visual Regression Tests › Dashboard Visual Tests › should match product owner dashboard visual baseline" classname="visual/visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Visual Regression Tests › Dashboard Visual Tests › should match scrum master dashboard visual baseline" classname="visual/visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Visual Regression Tests › Work Items Visual Tests › should match work items page visual baseline" classname="visual/visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Visual Regression Tests › Work Items Visual Tests › should match work item creation form visual baseline" classname="visual/visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Visual Regression Tests › QVF Comparison Visual Tests › should match QVF comparison page visual baseline" classname="visual/visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Visual Regression Tests › Component Visual Tests › should match UI components visual baseline" classname="visual/visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Visual Regression Tests › Component Visual Tests › should match navigation component visual baseline" classname="visual/visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Visual Regression Tests › Error States Visual Tests › should match 404 page visual baseline" classname="visual/visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Visual Regression Tests › Error States Visual Tests › should match error states visual baseline" classname="visual/visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Visual Regression Tests › Theme and Styling Tests › should match different viewport sizes" classname="visual/visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Visual Regression Tests › Theme and Styling Tests › should match print styles" classname="visual/visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Visual Regression Tests › Data Visualization Visual Tests › should match chart and graph visuals" classname="visual/visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Visual Regression Tests › Visual Accessibility Tests › should match high contrast mode visuals" classname="visual/visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Visual Regression Tests › Visual Accessibility Tests › should match focus states visual baseline" classname="visual/visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="work-items/crud-operations.spec.ts" timestamp="2025-08-09T04:22:17.493Z" hostname="mobile-chrome" tests="10" failures="0" skipped="10" time="0" errors="0">
<testcase name="Work Items CRUD Operations › Create Work Items › should create a new work item" classname="work-items/crud-operations.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Work Items CRUD Operations › Create Work Items › should validate required fields in work item creation" classname="work-items/crud-operations.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Work Items CRUD Operations › Read Work Items › should display work items list" classname="work-items/crud-operations.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Work Items CRUD Operations › Read Work Items › should allow work item search and filtering" classname="work-items/crud-operations.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Work Items CRUD Operations › Read Work Items › should display work item details" classname="work-items/crud-operations.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Work Items CRUD Operations › Update Work Items › should edit existing work item" classname="work-items/crud-operations.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Work Items CRUD Operations › Update Work Items › should update work item priority" classname="work-items/crud-operations.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Work Items CRUD Operations › Delete Work Items › should delete work item with confirmation" classname="work-items/crud-operations.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Work Items CRUD Operations › Delete Work Items › should cancel work item deletion" classname="work-items/crud-operations.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Work Items CRUD Operations › Bulk Operations › should perform bulk operations on work items" classname="work-items/crud-operations.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="api/integration.spec.ts" timestamp="2025-08-09T04:22:17.493Z" hostname="mobile-safari" tests="21" failures="0" skipped="21" time="0" errors="0">
<testcase name="QVF Platform API Integration Tests › Authentication API › should authenticate with valid credentials" classname="api/integration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform API Integration Tests › Authentication API › should reject invalid credentials" classname="api/integration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform API Integration Tests › Authentication API › should return user info with valid token" classname="api/integration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform API Integration Tests › Authentication API › should reject requests without token" classname="api/integration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform API Integration Tests › Authentication API › should reject requests with invalid token" classname="api/integration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform API Integration Tests › Health Check API › should return system health status" classname="api/integration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform API Integration Tests › Health Check API › should return version information" classname="api/integration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform API Integration Tests › Work Items API › should fetch work items list" classname="api/integration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform API Integration Tests › Work Items API › should create new work item" classname="api/integration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform API Integration Tests › Work Items API › should update existing work item" classname="api/integration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform API Integration Tests › Work Items API › should delete work item" classname="api/integration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform API Integration Tests › QVF Scoring API › should calculate QVF scores for work items" classname="api/integration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform API Integration Tests › QVF Scoring API › should fetch QVF criteria" classname="api/integration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform API Integration Tests › QVF Scoring API › should handle invalid QVF scoring requests" classname="api/integration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform API Integration Tests › Role-Based Access Control › should enforce role-based API access" classname="api/integration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform API Integration Tests › Error Handling › should handle malformed requests" classname="api/integration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform API Integration Tests › Error Handling › should handle missing required fields" classname="api/integration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform API Integration Tests › Error Handling › should handle server errors gracefully" classname="api/integration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform API Integration Tests › API Response Format › should return consistent response formats" classname="api/integration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform API Integration Tests › API Response Format › should include proper HTTP status codes" classname="api/integration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform API Integration Tests › Data Persistence › should persist data across API calls" classname="api/integration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="auth/authentication.spec.ts" timestamp="2025-08-09T04:22:17.493Z" hostname="mobile-safari" tests="15" failures="0" skipped="15" time="0" errors="0">
<testcase name="QVF Platform Authentication › should display login page correctly" classname="auth/authentication.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Authentication › should reject invalid credentials" classname="auth/authentication.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Authentication › should handle empty form submission" classname="auth/authentication.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Authentication › should login successfully as executive" classname="auth/authentication.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Authentication › should login successfully as product_owner" classname="auth/authentication.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Authentication › should login successfully as scrum_master" classname="auth/authentication.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Authentication › should login successfully as developer" classname="auth/authentication.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Authentication › should logout successfully as executive" classname="auth/authentication.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Authentication › should logout successfully as product_owner" classname="auth/authentication.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Authentication › should logout successfully as scrum_master" classname="auth/authentication.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Authentication › should logout successfully as developer" classname="auth/authentication.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Authentication › should maintain session across page refreshes" classname="auth/authentication.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Authentication › should redirect to login when accessing protected routes without authentication" classname="auth/authentication.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Authentication › should handle concurrent login sessions" classname="auth/authentication.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Authentication › should handle token expiration gracefully" classname="auth/authentication.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="comparison/stakeholder-comparison.spec.ts" timestamp="2025-08-09T04:22:17.493Z" hostname="mobile-safari" tests="11" failures="0" skipped="11" time="0" errors="0">
<testcase name="QVF Stakeholder Comparison Interface › should access stakeholder comparison interface" classname="comparison/stakeholder-comparison.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Stakeholder Comparison Interface › should display comparison matrix" classname="comparison/stakeholder-comparison.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Stakeholder Comparison Interface › should allow stakeholder input selection" classname="comparison/stakeholder-comparison.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Stakeholder Comparison Interface › should handle pairwise comparisons" classname="comparison/stakeholder-comparison.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Stakeholder Comparison Interface › should show comparison progress" classname="comparison/stakeholder-comparison.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Stakeholder Comparison Interface › should display consistency indicators" classname="comparison/stakeholder-comparison.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Stakeholder Comparison Interface › should handle different stakeholder perspectives" classname="comparison/stakeholder-comparison.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Stakeholder Comparison Interface › should allow comparison result export" classname="comparison/stakeholder-comparison.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Stakeholder Comparison Interface › should handle comparison data validation" classname="comparison/stakeholder-comparison.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Stakeholder Comparison Interface › should show comparison results summary" classname="comparison/stakeholder-comparison.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Stakeholder Comparison Interface › should handle real-time collaboration features" classname="comparison/stakeholder-comparison.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="dashboard/navigation.spec.ts" timestamp="2025-08-09T04:22:17.493Z" hostname="mobile-safari" tests="11" failures="0" skipped="11" time="0" errors="0">
<testcase name="QVF Platform Dashboard Navigation › Executive Dashboard › should display executive dashboard correctly" classname="dashboard/navigation.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Dashboard Navigation › Executive Dashboard › should have access to executive routes only" classname="dashboard/navigation.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Dashboard Navigation › Product Owner Dashboard › should display product owner dashboard correctly" classname="dashboard/navigation.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Dashboard Navigation › Product Owner Dashboard › should navigate between product owner sections" classname="dashboard/navigation.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Dashboard Navigation › Scrum Master Dashboard › should display scrum master dashboard correctly" classname="dashboard/navigation.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Dashboard Navigation › Scrum Master Dashboard › should manage sprint operations" classname="dashboard/navigation.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Dashboard Navigation › Developer Work Items › should display work items page for developer" classname="dashboard/navigation.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Dashboard Navigation › Developer Work Items › should have limited dashboard access" classname="dashboard/navigation.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Dashboard Navigation › Cross-Role Navigation › should show appropriate navigation elements for each role" classname="dashboard/navigation.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Dashboard Navigation › Navigation Accessibility › should have accessible navigation elements" classname="dashboard/navigation.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Dashboard Navigation › Navigation Accessibility › should support keyboard navigation" classname="dashboard/navigation.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="mobile/responsive.spec.ts" timestamp="2025-08-09T04:22:17.493Z" hostname="mobile-safari" tests="17" failures="0" skipped="17" time="0" errors="0">
<testcase name="QVF Platform Mobile Responsive Tests › Mobile Device Login Tests › should work on iPhone 12" classname="mobile/responsive.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Mobile Responsive Tests › Mobile Device Login Tests › should work on iPhone 13 Pro" classname="mobile/responsive.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Mobile Responsive Tests › Mobile Device Login Tests › should work on Pixel 5" classname="mobile/responsive.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Mobile Responsive Tests › Mobile Device Login Tests › should work on Samsung Galaxy S21" classname="mobile/responsive.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Mobile Responsive Tests › Mobile Dashboard Responsive Tests › should adapt dashboard layout for mobile screens" classname="mobile/responsive.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Mobile Responsive Tests › Mobile Dashboard Responsive Tests › should handle mobile work items interface" classname="mobile/responsive.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Mobile Responsive Tests › Tablet Responsive Tests › should provide optimal tablet experience" classname="mobile/responsive.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Mobile Responsive Tests › Custom Viewport Tests › should work at Small Mobile (320x568)" classname="mobile/responsive.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Mobile Responsive Tests › Custom Viewport Tests › should work at Medium Mobile (375x812)" classname="mobile/responsive.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Mobile Responsive Tests › Custom Viewport Tests › should work at Large Mobile (428x926)" classname="mobile/responsive.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Mobile Responsive Tests › Custom Viewport Tests › should work at Small Tablet (768x1024)" classname="mobile/responsive.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Mobile Responsive Tests › Custom Viewport Tests › should work at Large Tablet (1024x1366)" classname="mobile/responsive.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Mobile Responsive Tests › Touch Interaction Tests › should handle touch gestures properly" classname="mobile/responsive.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Mobile Responsive Tests › Orientation Tests › should handle device orientation changes" classname="mobile/responsive.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Mobile Responsive Tests › Mobile-Specific Features › should provide mobile-optimized interactions" classname="mobile/responsive.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Mobile Responsive Tests › Mobile-Specific Features › should handle mobile performance considerations" classname="mobile/responsive.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Mobile Responsive Tests › Accessibility on Mobile › should maintain accessibility standards on mobile" classname="mobile/responsive.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="qvf/scoring-workflow.spec.ts" timestamp="2025-08-09T04:22:17.493Z" hostname="mobile-safari" tests="9" failures="0" skipped="9" time="0" errors="0">
<testcase name="QVF Scoring Workflow › should access QVF scoring interface" classname="qvf/scoring-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Scoring Workflow › should display work items for QVF scoring" classname="qvf/scoring-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Scoring Workflow › should allow QVF score calculation" classname="qvf/scoring-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Scoring Workflow › should handle work item input for scoring" classname="qvf/scoring-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Scoring Workflow › should validate QVF scoring criteria" classname="qvf/scoring-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Scoring Workflow › should display QVF scoring results properly" classname="qvf/scoring-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Scoring Workflow › should handle bulk QVF scoring operations" classname="qvf/scoring-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Scoring Workflow › should export QVF scoring results" classname="qvf/scoring-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Scoring Workflow › should handle QVF scoring errors gracefully" classname="qvf/scoring-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="qvf-screenshots.spec.ts" timestamp="2025-08-09T04:22:17.493Z" hostname="mobile-safari" tests="2" failures="0" skipped="2" time="0" errors="0">
<testcase name="QVF Platform Screenshot Capture › Capture QVF Platform Screenshots" classname="qvf-screenshots.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Screenshot Capture › Capture Mobile Screenshots" classname="qvf-screenshots.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="visual/visual-regression.spec.ts" timestamp="2025-08-09T04:22:17.493Z" hostname="mobile-safari" tests="17" failures="0" skipped="17" time="0" errors="0">
<testcase name="QVF Platform Visual Regression Tests › Login Page Visual Tests › should match login page visual baseline" classname="visual/visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Visual Regression Tests › Login Page Visual Tests › should match login form visual baseline" classname="visual/visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Visual Regression Tests › Dashboard Visual Tests › should match executive dashboard visual baseline" classname="visual/visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Visual Regression Tests › Dashboard Visual Tests › should match product owner dashboard visual baseline" classname="visual/visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Visual Regression Tests › Dashboard Visual Tests › should match scrum master dashboard visual baseline" classname="visual/visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Visual Regression Tests › Work Items Visual Tests › should match work items page visual baseline" classname="visual/visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Visual Regression Tests › Work Items Visual Tests › should match work item creation form visual baseline" classname="visual/visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Visual Regression Tests › QVF Comparison Visual Tests › should match QVF comparison page visual baseline" classname="visual/visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Visual Regression Tests › Component Visual Tests › should match UI components visual baseline" classname="visual/visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Visual Regression Tests › Component Visual Tests › should match navigation component visual baseline" classname="visual/visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Visual Regression Tests › Error States Visual Tests › should match 404 page visual baseline" classname="visual/visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Visual Regression Tests › Error States Visual Tests › should match error states visual baseline" classname="visual/visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Visual Regression Tests › Theme and Styling Tests › should match different viewport sizes" classname="visual/visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Visual Regression Tests › Theme and Styling Tests › should match print styles" classname="visual/visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Visual Regression Tests › Data Visualization Visual Tests › should match chart and graph visuals" classname="visual/visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Visual Regression Tests › Visual Accessibility Tests › should match high contrast mode visuals" classname="visual/visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Visual Regression Tests › Visual Accessibility Tests › should match focus states visual baseline" classname="visual/visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="work-items/crud-operations.spec.ts" timestamp="2025-08-09T04:22:17.493Z" hostname="mobile-safari" tests="10" failures="0" skipped="10" time="0" errors="0">
<testcase name="Work Items CRUD Operations › Create Work Items › should create a new work item" classname="work-items/crud-operations.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Work Items CRUD Operations › Create Work Items › should validate required fields in work item creation" classname="work-items/crud-operations.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Work Items CRUD Operations › Read Work Items › should display work items list" classname="work-items/crud-operations.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Work Items CRUD Operations › Read Work Items › should allow work item search and filtering" classname="work-items/crud-operations.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Work Items CRUD Operations › Read Work Items › should display work item details" classname="work-items/crud-operations.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Work Items CRUD Operations › Update Work Items › should edit existing work item" classname="work-items/crud-operations.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Work Items CRUD Operations › Update Work Items › should update work item priority" classname="work-items/crud-operations.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Work Items CRUD Operations › Delete Work Items › should delete work item with confirmation" classname="work-items/crud-operations.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Work Items CRUD Operations › Delete Work Items › should cancel work item deletion" classname="work-items/crud-operations.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Work Items CRUD Operations › Bulk Operations › should perform bulk operations on work items" classname="work-items/crud-operations.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="api/integration.spec.ts" timestamp="2025-08-09T04:22:17.493Z" hostname="tablet" tests="21" failures="0" skipped="21" time="0" errors="0">
<testcase name="QVF Platform API Integration Tests › Authentication API › should authenticate with valid credentials" classname="api/integration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform API Integration Tests › Authentication API › should reject invalid credentials" classname="api/integration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform API Integration Tests › Authentication API › should return user info with valid token" classname="api/integration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform API Integration Tests › Authentication API › should reject requests without token" classname="api/integration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform API Integration Tests › Authentication API › should reject requests with invalid token" classname="api/integration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform API Integration Tests › Health Check API › should return system health status" classname="api/integration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform API Integration Tests › Health Check API › should return version information" classname="api/integration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform API Integration Tests › Work Items API › should fetch work items list" classname="api/integration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform API Integration Tests › Work Items API › should create new work item" classname="api/integration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform API Integration Tests › Work Items API › should update existing work item" classname="api/integration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform API Integration Tests › Work Items API › should delete work item" classname="api/integration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform API Integration Tests › QVF Scoring API › should calculate QVF scores for work items" classname="api/integration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform API Integration Tests › QVF Scoring API › should fetch QVF criteria" classname="api/integration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform API Integration Tests › QVF Scoring API › should handle invalid QVF scoring requests" classname="api/integration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform API Integration Tests › Role-Based Access Control › should enforce role-based API access" classname="api/integration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform API Integration Tests › Error Handling › should handle malformed requests" classname="api/integration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform API Integration Tests › Error Handling › should handle missing required fields" classname="api/integration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform API Integration Tests › Error Handling › should handle server errors gracefully" classname="api/integration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform API Integration Tests › API Response Format › should return consistent response formats" classname="api/integration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform API Integration Tests › API Response Format › should include proper HTTP status codes" classname="api/integration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform API Integration Tests › Data Persistence › should persist data across API calls" classname="api/integration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="auth/authentication.spec.ts" timestamp="2025-08-09T04:22:17.493Z" hostname="tablet" tests="15" failures="0" skipped="15" time="0" errors="0">
<testcase name="QVF Platform Authentication › should display login page correctly" classname="auth/authentication.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Authentication › should reject invalid credentials" classname="auth/authentication.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Authentication › should handle empty form submission" classname="auth/authentication.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Authentication › should login successfully as executive" classname="auth/authentication.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Authentication › should login successfully as product_owner" classname="auth/authentication.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Authentication › should login successfully as scrum_master" classname="auth/authentication.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Authentication › should login successfully as developer" classname="auth/authentication.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Authentication › should logout successfully as executive" classname="auth/authentication.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Authentication › should logout successfully as product_owner" classname="auth/authentication.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Authentication › should logout successfully as scrum_master" classname="auth/authentication.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Authentication › should logout successfully as developer" classname="auth/authentication.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Authentication › should maintain session across page refreshes" classname="auth/authentication.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Authentication › should redirect to login when accessing protected routes without authentication" classname="auth/authentication.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Authentication › should handle concurrent login sessions" classname="auth/authentication.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Authentication › should handle token expiration gracefully" classname="auth/authentication.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="comparison/stakeholder-comparison.spec.ts" timestamp="2025-08-09T04:22:17.493Z" hostname="tablet" tests="11" failures="0" skipped="11" time="0" errors="0">
<testcase name="QVF Stakeholder Comparison Interface › should access stakeholder comparison interface" classname="comparison/stakeholder-comparison.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Stakeholder Comparison Interface › should display comparison matrix" classname="comparison/stakeholder-comparison.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Stakeholder Comparison Interface › should allow stakeholder input selection" classname="comparison/stakeholder-comparison.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Stakeholder Comparison Interface › should handle pairwise comparisons" classname="comparison/stakeholder-comparison.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Stakeholder Comparison Interface › should show comparison progress" classname="comparison/stakeholder-comparison.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Stakeholder Comparison Interface › should display consistency indicators" classname="comparison/stakeholder-comparison.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Stakeholder Comparison Interface › should handle different stakeholder perspectives" classname="comparison/stakeholder-comparison.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Stakeholder Comparison Interface › should allow comparison result export" classname="comparison/stakeholder-comparison.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Stakeholder Comparison Interface › should handle comparison data validation" classname="comparison/stakeholder-comparison.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Stakeholder Comparison Interface › should show comparison results summary" classname="comparison/stakeholder-comparison.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Stakeholder Comparison Interface › should handle real-time collaboration features" classname="comparison/stakeholder-comparison.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="dashboard/navigation.spec.ts" timestamp="2025-08-09T04:22:17.493Z" hostname="tablet" tests="11" failures="0" skipped="11" time="0" errors="0">
<testcase name="QVF Platform Dashboard Navigation › Executive Dashboard › should display executive dashboard correctly" classname="dashboard/navigation.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Dashboard Navigation › Executive Dashboard › should have access to executive routes only" classname="dashboard/navigation.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Dashboard Navigation › Product Owner Dashboard › should display product owner dashboard correctly" classname="dashboard/navigation.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Dashboard Navigation › Product Owner Dashboard › should navigate between product owner sections" classname="dashboard/navigation.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Dashboard Navigation › Scrum Master Dashboard › should display scrum master dashboard correctly" classname="dashboard/navigation.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Dashboard Navigation › Scrum Master Dashboard › should manage sprint operations" classname="dashboard/navigation.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Dashboard Navigation › Developer Work Items › should display work items page for developer" classname="dashboard/navigation.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Dashboard Navigation › Developer Work Items › should have limited dashboard access" classname="dashboard/navigation.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Dashboard Navigation › Cross-Role Navigation › should show appropriate navigation elements for each role" classname="dashboard/navigation.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Dashboard Navigation › Navigation Accessibility › should have accessible navigation elements" classname="dashboard/navigation.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Dashboard Navigation › Navigation Accessibility › should support keyboard navigation" classname="dashboard/navigation.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="mobile/responsive.spec.ts" timestamp="2025-08-09T04:22:17.493Z" hostname="tablet" tests="17" failures="0" skipped="17" time="0" errors="0">
<testcase name="QVF Platform Mobile Responsive Tests › Mobile Device Login Tests › should work on iPhone 12" classname="mobile/responsive.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Mobile Responsive Tests › Mobile Device Login Tests › should work on iPhone 13 Pro" classname="mobile/responsive.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Mobile Responsive Tests › Mobile Device Login Tests › should work on Pixel 5" classname="mobile/responsive.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Mobile Responsive Tests › Mobile Device Login Tests › should work on Samsung Galaxy S21" classname="mobile/responsive.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Mobile Responsive Tests › Mobile Dashboard Responsive Tests › should adapt dashboard layout for mobile screens" classname="mobile/responsive.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Mobile Responsive Tests › Mobile Dashboard Responsive Tests › should handle mobile work items interface" classname="mobile/responsive.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Mobile Responsive Tests › Tablet Responsive Tests › should provide optimal tablet experience" classname="mobile/responsive.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Mobile Responsive Tests › Custom Viewport Tests › should work at Small Mobile (320x568)" classname="mobile/responsive.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Mobile Responsive Tests › Custom Viewport Tests › should work at Medium Mobile (375x812)" classname="mobile/responsive.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Mobile Responsive Tests › Custom Viewport Tests › should work at Large Mobile (428x926)" classname="mobile/responsive.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Mobile Responsive Tests › Custom Viewport Tests › should work at Small Tablet (768x1024)" classname="mobile/responsive.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Mobile Responsive Tests › Custom Viewport Tests › should work at Large Tablet (1024x1366)" classname="mobile/responsive.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Mobile Responsive Tests › Touch Interaction Tests › should handle touch gestures properly" classname="mobile/responsive.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Mobile Responsive Tests › Orientation Tests › should handle device orientation changes" classname="mobile/responsive.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Mobile Responsive Tests › Mobile-Specific Features › should provide mobile-optimized interactions" classname="mobile/responsive.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Mobile Responsive Tests › Mobile-Specific Features › should handle mobile performance considerations" classname="mobile/responsive.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Mobile Responsive Tests › Accessibility on Mobile › should maintain accessibility standards on mobile" classname="mobile/responsive.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="performance/performance.spec.ts" timestamp="2025-08-09T04:22:17.493Z" hostname="tablet" tests="13" failures="0" skipped="13" time="0" errors="0">
<testcase name="QVF Platform Performance Tests › Page Load Performance › should load login page within performance budget" classname="performance/performance.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Performance Tests › Page Load Performance › should load dashboard pages within performance budget" classname="performance/performance.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Performance Tests › Page Load Performance › should load work items page efficiently" classname="performance/performance.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Performance Tests › API Performance › should have fast authentication API response" classname="performance/performance.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Performance Tests › API Performance › should have efficient QVF scoring API performance" classname="performance/performance.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Performance Tests › API Performance › should handle concurrent API requests efficiently" classname="performance/performance.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Performance Tests › Resource Performance › should have efficient resource loading" classname="performance/performance.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Performance Tests › Resource Performance › should efficiently handle large datasets" classname="performance/performance.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Performance Tests › Memory Performance › should not have excessive memory usage" classname="performance/performance.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Performance Tests › User Interaction Performance › should have responsive UI interactions" classname="performance/performance.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Performance Tests › User Interaction Performance › should handle form input efficiently" classname="performance/performance.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Performance Tests › Network Performance › should handle slow network conditions" classname="performance/performance.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Performance Tests › Network Performance › should handle network errors gracefully" classname="performance/performance.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="qvf/scoring-workflow.spec.ts" timestamp="2025-08-09T04:22:17.493Z" hostname="tablet" tests="9" failures="0" skipped="9" time="0" errors="0">
<testcase name="QVF Scoring Workflow › should access QVF scoring interface" classname="qvf/scoring-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Scoring Workflow › should display work items for QVF scoring" classname="qvf/scoring-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Scoring Workflow › should allow QVF score calculation" classname="qvf/scoring-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Scoring Workflow › should handle work item input for scoring" classname="qvf/scoring-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Scoring Workflow › should validate QVF scoring criteria" classname="qvf/scoring-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Scoring Workflow › should display QVF scoring results properly" classname="qvf/scoring-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Scoring Workflow › should handle bulk QVF scoring operations" classname="qvf/scoring-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Scoring Workflow › should export QVF scoring results" classname="qvf/scoring-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Scoring Workflow › should handle QVF scoring errors gracefully" classname="qvf/scoring-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="qvf-screenshots.spec.ts" timestamp="2025-08-09T04:22:17.493Z" hostname="tablet" tests="2" failures="0" skipped="2" time="0" errors="0">
<testcase name="QVF Platform Screenshot Capture › Capture QVF Platform Screenshots" classname="qvf-screenshots.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Screenshot Capture › Capture Mobile Screenshots" classname="qvf-screenshots.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="visual/visual-regression.spec.ts" timestamp="2025-08-09T04:22:17.493Z" hostname="tablet" tests="17" failures="0" skipped="17" time="0" errors="0">
<testcase name="QVF Platform Visual Regression Tests › Login Page Visual Tests › should match login page visual baseline" classname="visual/visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Visual Regression Tests › Login Page Visual Tests › should match login form visual baseline" classname="visual/visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Visual Regression Tests › Dashboard Visual Tests › should match executive dashboard visual baseline" classname="visual/visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Visual Regression Tests › Dashboard Visual Tests › should match product owner dashboard visual baseline" classname="visual/visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Visual Regression Tests › Dashboard Visual Tests › should match scrum master dashboard visual baseline" classname="visual/visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Visual Regression Tests › Work Items Visual Tests › should match work items page visual baseline" classname="visual/visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Visual Regression Tests › Work Items Visual Tests › should match work item creation form visual baseline" classname="visual/visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Visual Regression Tests › QVF Comparison Visual Tests › should match QVF comparison page visual baseline" classname="visual/visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Visual Regression Tests › Component Visual Tests › should match UI components visual baseline" classname="visual/visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Visual Regression Tests › Component Visual Tests › should match navigation component visual baseline" classname="visual/visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Visual Regression Tests › Error States Visual Tests › should match 404 page visual baseline" classname="visual/visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Visual Regression Tests › Error States Visual Tests › should match error states visual baseline" classname="visual/visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Visual Regression Tests › Theme and Styling Tests › should match different viewport sizes" classname="visual/visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Visual Regression Tests › Theme and Styling Tests › should match print styles" classname="visual/visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Visual Regression Tests › Data Visualization Visual Tests › should match chart and graph visuals" classname="visual/visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Visual Regression Tests › Visual Accessibility Tests › should match high contrast mode visuals" classname="visual/visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Visual Regression Tests › Visual Accessibility Tests › should match focus states visual baseline" classname="visual/visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="work-items/crud-operations.spec.ts" timestamp="2025-08-09T04:22:17.493Z" hostname="tablet" tests="10" failures="0" skipped="10" time="0" errors="0">
<testcase name="Work Items CRUD Operations › Create Work Items › should create a new work item" classname="work-items/crud-operations.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Work Items CRUD Operations › Create Work Items › should validate required fields in work item creation" classname="work-items/crud-operations.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Work Items CRUD Operations › Read Work Items › should display work items list" classname="work-items/crud-operations.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Work Items CRUD Operations › Read Work Items › should allow work item search and filtering" classname="work-items/crud-operations.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Work Items CRUD Operations › Read Work Items › should display work item details" classname="work-items/crud-operations.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Work Items CRUD Operations › Update Work Items › should edit existing work item" classname="work-items/crud-operations.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Work Items CRUD Operations › Update Work Items › should update work item priority" classname="work-items/crud-operations.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Work Items CRUD Operations › Delete Work Items › should delete work item with confirmation" classname="work-items/crud-operations.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Work Items CRUD Operations › Delete Work Items › should cancel work item deletion" classname="work-items/crud-operations.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Work Items CRUD Operations › Bulk Operations › should perform bulk operations on work items" classname="work-items/crud-operations.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="api/integration.spec.ts" timestamp="2025-08-09T04:22:17.493Z" hostname="api" tests="21" failures="0" skipped="21" time="0" errors="0">
<testcase name="QVF Platform API Integration Tests › Authentication API › should authenticate with valid credentials" classname="api/integration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform API Integration Tests › Authentication API › should reject invalid credentials" classname="api/integration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform API Integration Tests › Authentication API › should return user info with valid token" classname="api/integration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform API Integration Tests › Authentication API › should reject requests without token" classname="api/integration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform API Integration Tests › Authentication API › should reject requests with invalid token" classname="api/integration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform API Integration Tests › Health Check API › should return system health status" classname="api/integration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform API Integration Tests › Health Check API › should return version information" classname="api/integration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform API Integration Tests › Work Items API › should fetch work items list" classname="api/integration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform API Integration Tests › Work Items API › should create new work item" classname="api/integration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform API Integration Tests › Work Items API › should update existing work item" classname="api/integration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform API Integration Tests › Work Items API › should delete work item" classname="api/integration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform API Integration Tests › QVF Scoring API › should calculate QVF scores for work items" classname="api/integration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform API Integration Tests › QVF Scoring API › should fetch QVF criteria" classname="api/integration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform API Integration Tests › QVF Scoring API › should handle invalid QVF scoring requests" classname="api/integration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform API Integration Tests › Role-Based Access Control › should enforce role-based API access" classname="api/integration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform API Integration Tests › Error Handling › should handle malformed requests" classname="api/integration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform API Integration Tests › Error Handling › should handle missing required fields" classname="api/integration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform API Integration Tests › Error Handling › should handle server errors gracefully" classname="api/integration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform API Integration Tests › API Response Format › should return consistent response formats" classname="api/integration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform API Integration Tests › API Response Format › should include proper HTTP status codes" classname="api/integration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform API Integration Tests › Data Persistence › should persist data across API calls" classname="api/integration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="performance/performance.spec.ts" timestamp="2025-08-09T04:22:17.493Z" hostname="performance" tests="13" failures="0" skipped="13" time="0" errors="0">
<testcase name="QVF Platform Performance Tests › Page Load Performance › should load login page within performance budget" classname="performance/performance.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Performance Tests › Page Load Performance › should load dashboard pages within performance budget" classname="performance/performance.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Performance Tests › Page Load Performance › should load work items page efficiently" classname="performance/performance.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Performance Tests › API Performance › should have fast authentication API response" classname="performance/performance.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Performance Tests › API Performance › should have efficient QVF scoring API performance" classname="performance/performance.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Performance Tests › API Performance › should handle concurrent API requests efficiently" classname="performance/performance.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Performance Tests › Resource Performance › should have efficient resource loading" classname="performance/performance.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Performance Tests › Resource Performance › should efficiently handle large datasets" classname="performance/performance.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Performance Tests › Memory Performance › should not have excessive memory usage" classname="performance/performance.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Performance Tests › User Interaction Performance › should have responsive UI interactions" classname="performance/performance.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Performance Tests › User Interaction Performance › should handle form input efficiently" classname="performance/performance.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Performance Tests › Network Performance › should handle slow network conditions" classname="performance/performance.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Performance Tests › Network Performance › should handle network errors gracefully" classname="performance/performance.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="visual/visual-regression.spec.ts" timestamp="2025-08-09T04:22:17.493Z" hostname="visual" tests="17" failures="0" skipped="17" time="0" errors="0">
<testcase name="QVF Platform Visual Regression Tests › Login Page Visual Tests › should match login page visual baseline" classname="visual/visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Visual Regression Tests › Login Page Visual Tests › should match login form visual baseline" classname="visual/visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Visual Regression Tests › Dashboard Visual Tests › should match executive dashboard visual baseline" classname="visual/visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Visual Regression Tests › Dashboard Visual Tests › should match product owner dashboard visual baseline" classname="visual/visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Visual Regression Tests › Dashboard Visual Tests › should match scrum master dashboard visual baseline" classname="visual/visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Visual Regression Tests › Work Items Visual Tests › should match work items page visual baseline" classname="visual/visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Visual Regression Tests › Work Items Visual Tests › should match work item creation form visual baseline" classname="visual/visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Visual Regression Tests › QVF Comparison Visual Tests › should match QVF comparison page visual baseline" classname="visual/visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Visual Regression Tests › Component Visual Tests › should match UI components visual baseline" classname="visual/visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Visual Regression Tests › Component Visual Tests › should match navigation component visual baseline" classname="visual/visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Visual Regression Tests › Error States Visual Tests › should match 404 page visual baseline" classname="visual/visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Visual Regression Tests › Error States Visual Tests › should match error states visual baseline" classname="visual/visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Visual Regression Tests › Theme and Styling Tests › should match different viewport sizes" classname="visual/visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Visual Regression Tests › Theme and Styling Tests › should match print styles" classname="visual/visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Visual Regression Tests › Data Visualization Visual Tests › should match chart and graph visuals" classname="visual/visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Visual Regression Tests › Visual Accessibility Tests › should match high contrast mode visuals" classname="visual/visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="QVF Platform Visual Regression Tests › Visual Accessibility Tests › should match focus states visual baseline" classname="visual/visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
</testsuites>